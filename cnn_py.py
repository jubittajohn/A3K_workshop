# -*- coding: utf-8 -*-
"""CNN.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P3MXm-minSfNElg0Hze8jiBChlBP4at8
"""

from keras.models import Sequential
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense

classifier = Sequential()

classifier.add(Convolution2D(32,(3, 3),input_shape=(64, 64, 3),activation = 'relu' ))

classifier.add(MaxPooling2D(pool_size=(2,2)))

classifier.add(Flatten())

classifier.add(Dense(activation ='relu',units=128))
classifier.add(Dense(activation ='sigmoid',units=1))

classifier.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

!git clone https://github.com/jubittajohn/A3K_workshop.git

!ls
!pwd

from keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale = 1./255,
                                   shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip = True)

test_datagen = ImageDataGenerator(rescale = 1./255)

training_set = train_datagen.flow_from_directory('/content/A3K_workshop/dataset/training_set',
                                                 target_size = (64, 64),
                                                 batch_size = 32,
                                                 class_mode = 'binary')

test_set = test_datagen.flow_from_directory('/content/A3K_workshop/dataset/test_set',
                                            target_size = (64, 64),
                                            batch_size = 32,
                                            class_mode = 'binary')

classifier.fit_generator(training_set,
                         steps_per_epoch = 8000,
                         epochs = 5,
                         validation_data = test_set,
                         validation_steps = 2000)

!ls
!pwd

import numpy as np
from keras.preprocessing import image
test_image=image.load_img('/content/A3K_workshop/dataset/single_prediction/cat_or_dog_2.jpg',target_size=(64,64))
test_image=image.img_to_array(test_image)
#print(test_image)
test_image=np.expand_dims(test_image,axis=0)
result=classifier.predict(test_image)
print(result)
print(training_set.class_indices)
if result[0][0]==1:
  prediction='dog'
else:
  prediction='cat'
print(prediction)